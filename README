Maliit

Maliit provides a flexible and cross-platform input method framework. It has a
plugin-based client-server architecture where applications act as clients and
communicate with the Maliit server via input context plugins. The communication
link currently uses D-Bus. Maliit is an open source framework (LGPL 2) with
open source plugins (BSD).

This is the Maliit framework. For plugins, such as virtual keyboards, see
http://wiki.maliit.org/Plugins


Installing

Qt 4.7 must be installed to build the Maliit framework. At a terminal, run:

qmake
make
make install

Run qmake HELP=1 to get more information about build options.


Running

Set Maliit as the Qt and GTK+ input context:

export QT_IM_MODULE=Maliit
export GTK_IM_MODULE=Maliit

Start the server:

maliit-server -software -bypass-wm-hint

Note that a compositing window manager and a D-Bus session bus are required to
use Maliit.

Test with the provided example applications:

maliit-exampleapp-plainqt # for Qt
maliit-exampleapp-gtk2 # for Gtk2
maliit-exampleapp-gtk3 # for Gtk3

Double-tap on the input field, and an input method (usually a virtual keyboard)
should be shown. Note that an input method plugin, such as the Maliit keyboard
from the maliit-plugins package, must be installed for the example applications
to work.

Resources

Wiki: http://wiki.maliit.org/
IRC: #maliit on chat.freenode.net
Announcement mailing list: maliit-announce@lists.maliit.org
Discussion mailing list: maliit-discuss@lists.maliit.org


NETWORK TRANSPARENCY

On one computer run:
maliit-server -allow-anonymous -override-address tcp:host=xxx.xxx.xxx.xxx,port=yyyyy

Any valid dbus address is supported. Using -allow-anonymous must only be done on
a trusted network. If using a method with authentication, the -allow-anonymous flag
may be dropped.

On another computer:
MALIIT_SERVER_ADDRESS=tcp:host=xxx.xxx.xxx.xxx,port=yyyyy
export MALIIT_SERVER_ADDRESS
maliit-exampleapp-plainqt (or maliit-exampleapp-gtk{2,3})

Where xxx.xxx.xxx.xxx is IP address of computer where maliit-server is ran
and yyyyy is port number < 65536.


LOCAL BUILD, INSTALL AND RUN

Gtk+ paths and executable names may differ between distros and
architectures, check them on your own.

# framework build

export GCONF_CONFIG_SOURCE="xml:merged:$HOME/.gconf/gconf.xml.defaults"
cd maliit-framework
qmake-qt4 -r PREFIX="$HOME/maliit-local" LIBDIR="$HOME/maliit-local/lib64" CONFIG+=disable-gtk-cache-update
make -j4

# framework install

make install
export LD_LIBRARY_PATH="$HOME/maliit-local/lib64"
GTK_PATH="$HOME/maliit-local/lib64/gtk-2.0" /usr/bin/gtk-query-immodules-2.0-64 >"$HOME/maliit-local/lib64/gtk-2.0/2.10.0/gtk.immodules"
GTK_PATH="$HOME/maliit-local/lib64/gtk-3.0" /usr/bin/gtk-query-immodules-3.0-64 >"$HOME/maliit-local/lib64/gtk-3.0/3.0.0/gtk.immodules"

# plugins build

cd ../maliit-plugins
export QMAKEFEATURES="$HOME/maliit-local/mkspecs/features"
qmake-qt4 -r
make -j4

# plugins install

make install

# server run

"$HOME/maliit-local/bin/maliit-server" &

# qt app run

export QT_PLUGIN_PATH="$HOME/maliit-local/plugins"
QT_IM_MODULE=Maliit "$HOME/maliit-local/bin/maliit-exampleapp-plainqt"

# gtk2 app run

GTK_IM_MODULE_FILE="$HOME/maliit-local/lib64/gtk-2.0/2.10.0/gtk.immodules" GTK_IM_MODULE=Maliit "$HOME/maliit-local/bin/maliit-exampleapp-gtk2"

# gtk3 app run

GTK_IM_MODULE_FILE="$HOME/maliit-local/lib64/gtk-3.0/3.0.0/gtk.immodules" GTK_IM_MODULE=Maliit "$HOME/maliit-local/bin/maliit-exampleapp-gtk3"
